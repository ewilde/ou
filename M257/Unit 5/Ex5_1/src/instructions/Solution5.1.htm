<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
  <title>Discussion of Activity 5.1 - Exploring the API documentation</title>
  <link rel="stylesheet" type="text/css" href="../../../../m257.css">
</head>
<body>
<h1>Discussion of Activity 5.1 - Exploring the API documentation</h1>
<p>Although we have only provided a quick tour of the documentation,
you should
now know enough to be able to use it whenever you need information
about any
feature of the API. </p>
<p>The Java language is vast and no single person can possibly know it
all, so
the documentation is an indispensable tool that all programmers need to
consult
very frequently. </p>
<h2>Answers to Questions </h2>
<h2>Questions Section 4 </h2>
<p>(a) <span class="PA">java.lang.Object</span> </p>
<p>(b) Thirteen, two of which are deprecated (see below). </p>
<p>(c) Compares this string to another string, and returns an <span
 clss="PA">int</span>. </p>
<p>(e) There is one deprecated method, one of the three methods called <span
 class="PA">getBytes</span>.
Deprecated features should not normally be used and the API indicates
alternative approaches. Typically, they were part of a previous version
of the
language, but do not work properly or are inconsistent in some way,
such as
their name or argument pattern. They remain in the API specification
for a
number of later versions, so that users know their status. </p>
<p>(f) Recall that overloaded methods have the same name but different
patterns
of arguments. The <span class="PA">String</span> class has a large
number of methods and many of them
are overloaded. There are 14 groups of overloaded methods in this
class:
<span class="PA">contentEquals, copyValueOf, format, getBytes, indexOf,
lastIndexOf, regionMatches, replace, split, startsWith, substring,
toLowerCase, toUpperCase, valueOf</span>.</p>
<h2>Question Section 5 </h2>
<p>The method <span class="PA">get(int)</span> in
<span class="PA">java.util.LinkedList</span> throws an <span class="PA">IndexOutOfBoundsException</span>.
You could also
have found this out by looking at the documentation for class <span
 class="PA">java.util.LinkedList</span>
itself.</p>
</body>
</html>
