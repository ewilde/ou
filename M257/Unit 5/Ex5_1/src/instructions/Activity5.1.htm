<html>

<head>

<title>Activity 5.1 - Exploring the API documentation</title>
<link rel="stylesheet" type="text/css" href="../../../../m257.css">
</head>

<body>

<h1>Activity 5.1 - Exploring the API documentation</h1>

<h2>Topic </h2>

<p>This activity explores the API documentation. </p>

<h2>Materials </h2>

<p>We will use the Java 2 Standard Edition 6.0 API Specification, which is accessible
from NetBeans by selecting Help|Javadoc references|Java Platform SE 6.</p>

<p>You can also find the documentation online, for example at <a
href="http://download-llnw.oracle.com/javase/6/docs/">http://download-llnw.oracle.com/javase/6/docs/</a></p>

<p>There is a discussion of this activity in the Solution document in this project.</p>

<h2>Instructions </h2>

<ol>
<li>Using the online source, when the browser opens you will see a schematic of the Java SE Platform with a navigation
    bar (a row of links) near the top of the page.
    <p><img src="Activity5.1_files/oracleJavaSE6docs.png" alt="screen grab of JDK documentation">
   
    <p>
        Click on the link <u>Java SE 6 API Documentation</u>.  You will be presented with a list of the Java 2 Platform Packages. </p>
<br/>
     <p><img src="Activity5.1_files/theSEFramesView.png" alt="frames view of Java SE documentation">

    <p>Scroll down to <b>java.lang</b>. Read the summary in the right-hand column then follow the link for <b>java.lang</b>.</p>
</li>

<li><p>Now follow the <b>Description</b> link from <b>java.lang</b> to see a complete
description of this package. The Description link takes you towards the bottom
of the page.</p>
</li>

<li><p>Scroll back towards the top of the page and go to the second section, which is the <b>Class Summary</b>. Go down the classes until you come to <b>String</b> and read the
summary of what this class does.</p>
</li>

<li>Now
follow the link for <b>String</b>. This will take you to a comprehensive
description, containing all the information a programmer needs to make use of
this class, presented in a standard format. The API documentation provides a
similar description of every class in every package of the API.<br>

<p>Answer the following questions about the class <span
class="PA">String</span>:</p>

<p>(a) What is its immediate superclass? </p>

<p>(b) How many constructors does it have? </p>

<p>(c) Look at the method summary. What does the
method <span class="PA">compareTo(String anotherString)</span> do and what is
its return type?</p>

<p>(d) Follow the link from the name of the method, <span
class="PA">compareTo(String anotherString)</span> to find the more detailed
specification of this method.</p>

<p>(e) Return to the method summary. How many
deprecated methods are there? </p>

<p>(f) From the method summary, how many groups of
overloaded methods are there? </p></li>

<li>Scroll
to the top of the API page, where there is a navigation bar, like this: <br>

<p><b><u>Overview</u></b> <b><u>Package</u></b> <b><u>Class</u></b>
<b><u>Use</u></b> <b><u>Tree</u></b> <b><u>Deprecated</u></b> <b><u>Index</u></b>
<b><u>Help</u></b> </p>

<p>This bar is standard on all pages of the API.
Follow the link to <b>Index</b>. This will take you to a list of all the
classes, constructors, methods and variables in the entire API, organised
alphabetically. </p>

<p>Use this index to locate the method <span
class="PA">get(int)</span> in class <span class="PA">java.util.LinkedList</span>
(there are a number of <span class="PA">get(int)</span> methods but we are
interested in this specific one). Follow the link to the method and look up
what exception it may throw. </p></li>

<li>Return
to the navigation bar and select <b>Help</b>. <br>

<p>Have a quick look at this explanation of how the
API documentation is organised. Don't worry about any terms you don't recognise.
They will all become clear by the end of the course.</p></li>

</ol>

</body>

</html>
